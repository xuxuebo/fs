<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd">

    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>

    <context:property-placeholder location="classpath:env.properties,classpath:config.properties"/>

    <context:annotation-config/>

    <context:component-scan base-package="com.qgutech.fs">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="maxPoolSize" value="${fs.taskExecutor.maxPoolSize}"/>
        <property name="queueCapacity" value="${fs.taskExecutor.queueCapacity}"/>
        <property name="corePoolSize" value="${fs.taskExecutor.corePoolSize}"/>
    </bean>

    <bean id="propertiesUtils" class="com.qgutech.fs.utils.PropertiesUtils">
        <property name="serverCode" value="${fs.serverCode}"/>
        <property name="serverSecret" value="${fs.serverSecret}"/>
        <property name="urlExpireTime" value="${fs.urlExpireTime}"/>
        <property name="signLevel" value="${fs.signLevel}"/>
        <property name="serverHost" value="${fs.serverHost}"/>
        <property name="saveFileUrl" value="${fs.saveFileUrl}"/>
        <property name="deleteFileUrl" value="${fs.deleteFileUrl}"/>
        <property name="updateFileUrl" value="${fs.updateFileUrl}"/>
        <property name="upload" value="${fs.upload}"/>
        <property name="download" value="${fs.download}"/>
        <property name="convert" value="${fs.convert}"/>
        <property name="fileStoreDir" value="${fs.fileStoreDir}"/>
        <property name="imageType" value="${fs.imageType}"/>
        <property name="videoType" value="${fs.videoType}"/>
        <property name="audioType" value="${fs.audioType}"/>
        <property name="zipType" value="${fs.zipType}"/>
        <property name="cutImageTime" value="${fs.cutImageTime}"/>
        <property name="docConvert" value="${fs.docConvert}"/>
        <property name="asyncUrl" value="${fs.asyncUrl}"/>
        <property name="backUri" value="${fs.backUri}"/>
        <property name="httpProtocol" value="${fs.httpProtocol}"/>
        <property name="canOutputDocumentDomain" value="${fs.canOutputDocumentDomain}"/>
    </bean>

    <!-- jedis连接池 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!--<property name="maxTotal" value="20"/>-->
        <property name="maxIdle" value="${jedis.maxIdle}"/>
        <property name="maxWaitMillis" value="${jedis.maxWaitMillis}"/>
        <property name="testOnBorrow" value="true"/>
    </bean>

    <bean name="fsRedis" class="com.qgutech.fs.utils.FsRedis" lazy-init="false">
        <property name="commonJedis" ref="commonJedis"/>
    </bean>

    <bean id="commonJedis" class="com.qgutech.fs.utils.RedisFactoryBean">
        <constructor-arg index="0" ref="jedisPoolConfig"/>
        <constructor-arg index="1" value="${commonRedisUrl}"/>
        <constructor-arg index="2" value="${commonRedisPort}"/>
    </bean>

    <bean id="converter" abstract="true" class="com.qgutech.fs.convert.AbstractConverter">
        <property name="serverType" value="${fs.serverType}"/>
    </bean>

    <bean id="docToPdfConverter" parent="converter" class="com.qgutech.fs.convert.DocToPdfConverter">
    </bean>

    <bean id="pdfToImageConverter" parent="converter" class="com.qgutech.fs.convert.PdfToImageConverter">
        <property name="taskExecutor" ref="taskExecutor"/>
        <property name="semaphoreCnt" value="${fs.pdfToImage.semaphoreCnt}"/>
        <property name="pdfSplitSize" value="${fs.pdfToImage.pdfSplitSize}"/>
        <property name="convertToolPath" value="${fs.pdfToImage.convertToolPath}"/>
    </bean>

    <bean id="processor" abstract="true" class="com.qgutech.fs.processor.AbstractProcessor"
          depends-on="propertiesUtils">
        <property name="taskExecutor" ref="taskExecutor"/>
        <property name="commonJedis" ref="commonJedis"/>
        <property name="maxSubmitCnt" value="${fs.processor.maxSubmitCnt}"/>
        <property name="submitFailedWaitTime" value="${fs.processor.submitFailedWaitTime}"/>
        <property name="semaphoreCnt" value="${fs.processor.default.semaphoreCnt}"/>
    </bean>

    <bean id="imageProcessor" parent="processor" class="com.qgutech.fs.processor.ImageProcessor"/>

    <bean id="zipImageProcessor" parent="processor" class="com.qgutech.fs.processor.ZipImageProcessor">
        <property name="semaphoreCnt" value="${fs.processor.zipImage.semaphoreCnt}"/>
    </bean>

    <bean id="fileProcessor" parent="processor" class="com.qgutech.fs.processor.FileProcessor"/>

    <bean id="zipProcessor" parent="processor" class="com.qgutech.fs.processor.ZipProcessor"/>

    <bean id="audioProcessor" parent="processor" class="com.qgutech.fs.processor.AudioProcessor"/>

    <bean id="zipAudioProcessor" parent="processor" class="com.qgutech.fs.processor.ZipAudioProcessor">
        <property name="semaphoreCnt" value="${fs.processor.zipAudio.semaphoreCnt}"/>
    </bean>

    <bean id="videoProcessor" parent="processor" class="com.qgutech.fs.processor.VideoProcessor">
        <property name="semaphoreCnt" value="${fs.processor.video.semaphoreCnt}"/>
    </bean>

    <bean id="zipVideoProcessor" parent="processor" class="com.qgutech.fs.processor.ZipVideoProcessor">
        <property name="semaphoreCnt" value="${fs.processor.zipVideo.semaphoreCnt}"/>
    </bean>

    <bean id="aDocProcessor" abstract="true" parent="processor"
          class="com.qgutech.fs.processor.AbstractDocProcessor">
        <property name="docToPdfConverter" ref="docToPdfConverter"/>
        <property name="pdfToImageConverter" ref="pdfToImageConverter"/>
    </bean>

    <bean id="docProcessor" parent="aDocProcessor" class="com.qgutech.fs.processor.DocProcessor">
        <property name="semaphoreCnt" value="${fs.processor.doc.semaphoreCnt}"/>
    </bean>

    <bean id="zipDocProcessor" parent="aDocProcessor" class="com.qgutech.fs.processor.ZipDocProcessor">
        <property name="semaphoreCnt" value="${fs.processor.zipDoc.semaphoreCnt}"/>
    </bean>

    <bean id="processorFactory" class="com.qgutech.fs.processor.ProcessorFactory">
        <property name="imageProcessor" ref="imageProcessor"/>
        <property name="zipImageProcessor" ref="zipImageProcessor"/>
        <property name="fileProcessor" ref="fileProcessor"/>
        <property name="zipProcessor" ref="zipProcessor"/>
        <property name="audioProcessor" ref="audioProcessor"/>
        <property name="zipAudioProcessor" ref="zipAudioProcessor"/>
        <property name="videoProcessor" ref="videoProcessor"/>
        <property name="zipVideoProcessor" ref="zipVideoProcessor"/>
        <property name="docProcessor" ref="docProcessor"/>
        <property name="zipDocProcessor" ref="zipDocProcessor"/>
    </bean>

    <bean id="processorExecutor" class="com.qgutech.fs.processor.ProcessorExecutor"
          init-method="init" depends-on="propertiesUtils">
        <property name="taskExecutor" ref="taskExecutor"/>
        <property name="commonJedis" ref="commonJedis"/>
        <property name="lockExpireTime" value="${fs.processorExecutor.lockExpireTime}"/>
        <property name="maxDoingListSize" value="${fs.processorExecutor.maxDoingListSize}"/>
        <property name="minAvailablePoolSize" value="${fs.processorExecutor.minAvailablePoolSize}"/>
        <property name="timerDelay" value="${fs.processorExecutor.timerDelay}"/>
        <property name="timerPeriod" value="${fs.processorExecutor.timerPeriod}"/>
        <property name="processorFactory" ref="processorFactory"/>
        <property name="maxDoingListSizeMap">
            <map key-type="java.lang.String" value-type="java.lang.Integer">
                <entry key="fs_audio_queue_list" value="${fs.processorExecutor.audio.maxDoingListSize}"/>
                <entry key="fs_zip_audio_queue_list" value="${fs.processorExecutor.zipAudio.maxDoingListSize}"/>
                <entry key="fs_video_queue_list" value="${fs.processorExecutor.video.maxDoingListSize}"/>
                <entry key="fs_zip_video_queue_list" value="${fs.processorExecutor.zipVideo.maxDoingListSize}"/>
                <entry key="fs_doc_queue_list" value="${fs.processorExecutor.doc.maxDoingListSize}"/>
                <entry key="fs_zip_doc_queue_list" value="${fs.processorExecutor.zipDoc.maxDoingListSize}"/>
                <entry key="fs_zip_image_queue_list" value="${fs.processorExecutor.image.maxDoingListSize}"/>
            </map>
        </property>
    </bean>

</beans>